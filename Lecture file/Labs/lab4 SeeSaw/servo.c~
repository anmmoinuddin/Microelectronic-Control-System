/**
	@author Thomas Grunenberg
	@version 0.1
	@file servo.c
	@brief Functions to control a servo motor over PB1
*/

/**
	@brief The CPU speed in Hz
*/
#define F_CPU 8000000UL


/******************************************************************************/
/* INCLUDED FILES                                                             */
/******************************************************************************/
#include <avr/io.h>
#include <avr/interrupt.h>
#include "servo.h"
/******************************************************************************/




/******************************************************************************/
/* Global Memory                                                              */
/******************************************************************************/

/******************************************************************************/



/******************************************************************************/
/* FUNCTIONS                                                                  */
/******************************************************************************/

void servo_init(void){
	
	// Port einstellen
	DDRB |= (1 << DDB1);		// PB1 as Output
	PORTB &= ~( 1 << PB1);		// Low value for init


	// Timer 1
	// prescaler 8 => 8Mhz => 1us per step
	// Fast PWM mode 14 (top = ICR1)
	TCCR1B = (1 << CS11) | (1 << WGM12) | (1 << WGM13); 
	TCCR1A = (1 << COM1A1) | (1 << WGM11);
	ICR1 = 20000UL;


	OCR1A = 1500;



}
/******************************************************************************/

void servo_setPos(uint8_t pos){
	OCR1A = 1000 + 4 * pos;
}
/******************************************************************************/

uint8_t servo_getPos(void){
	return (OCR1A-1000)/4;
}
/******************************************************************************/
